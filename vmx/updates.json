{
  "variables": {
    "debug_log": "",
    "source_path": null,
    "administrator_password": null,
    "output_directory": null,
    "memsize": "4096",
    "numvcpus": "4"
  },
  "builders": [
    {
      "type": "vmware-vmx",

      "source_path": "{{user `source_path`}}",

      "headless": false,
      "boot_wait": "2m",

      "communicator": "winrm",
      "winrm_username": "Administrator",
      "winrm_password": "{{user `administrator_password`}}",
      "winrm_timeout": "5m",
      "winrm_insecure": true,

      "shutdown_timeout": "15m",
      "shutdown_command": "C:\\Windows\\System32\\shutdown.exe /s",

      "vmx_data": {
        "memsize": "{{user `memsize`}}",
        "numvcpus": "{{user `numvcpus`}}"
      },
      "output_directory": "{{user `output_directory`}}"
    }
  ],
  "provisioners": [
    {
      "type": "powershell",
      "inline": [
        "if (Test-Path C:\\provision) { Remove-Item -Path C:\\provision -Recurse -Force }",
        "New-Item -ItemType 'directory' -Path C:\\provision"
      ]
    },
    {
      "type": "file",
      "source": "scripts/update-provisioner.ps1",
      "destination": "C:\\provision\\update-provisioner.ps1"
    },
    {
      "type": "file",
      "source": "scripts/autorun-updates.ps1",
      "destination": "C:\\provision\\autorun-updates.ps1"
    },
    {
      "type": "file",
      "source": "scripts/PowershellUtils.psm1",
      "destination": "C:\\provision\\PowershellUtils.psm1"
    },
    {
      "type": "file",
      "source": "../../windows-stemcell-dependencies/ps-windowsupdate/PSWindowsUpdate.zip",
      "destination": "C:\\provision\\PSWindowsUpdate.zip"
    },
    {
      "type": "windows-restart",
      "restart_command": "powershell.exe C:\\provision\\autorun-updates.ps1 -AdminPassword {{user `administrator_password`}} -DebugLog {{user `debug_log`}}",
      "restart_timeout": "12h"
    },
    {
      "type": "powershell",
      "inline": ["if (Test-Path C:\\update-logs.txt) { Get-Content -Path C:\\update-logs.txt } else { Write-Host \"Missing log file\" }"]
    },
    {
      "type": "powershell",
      "inline": ["$path = {{user `debug_log`}}; if (($path.Length -gt 0) -And (Test-Path $path)) { Get-Content -Path $path } else { Write-Host \"Missing debug log file\" }"]
    }
  ]
}
